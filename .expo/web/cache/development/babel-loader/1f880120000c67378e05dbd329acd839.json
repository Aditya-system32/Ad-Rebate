{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\Web Projects\\\\Ad-rebate\\\\Screens\\\\Categories.js\";\nimport \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport test from \"../assets/images/test.jpg\";\nimport { db } from \"../firebases\";\nexport default function CategoriesScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(route.params.paramKey),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categorySelectedData = _useState4[0],\n      setCategorySelectedData = _useState4[1];\n\n  useEffect(function () {\n    if (true) {\n      var categoryData = db.collection(\"Categories\").doc(value);\n      categoryData.get().then(function (doc) {\n        if (doc.exists) {\n          setCategorySelectedData(doc.data().clients);\n        } else {}\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n      });\n    }\n  }, []);\n\n  if (categorySelectedData == undefined) {\n    return React.createElement(View, {\n      style: styles.activityIndicator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: \"#ffffff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.clientsWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, categorySelectedData.map(function (name) {\n    return React.createElement(View, {\n      style: styles.clientItem,\n      key: name.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableNativeFeedback, {\n      onPress: function onPress() {\n        return navigation.navigate(\"AdsVideo\", {\n          paramKey: name.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: styles.registerButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.clientImage,\n      source: test,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    }))), React.createElement(Text, {\n      style: styles.clientName,\n      key: name.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, name.name));\n  })), React.createElement(Button, {\n    title: \"Go back\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  clientImage: {\n    flex: 1,\n    resizeMode: \"contain\",\n    borderRadius: 100\n  },\n  clientItem: {\n    alignItems: \"center\"\n  },\n  clientName: {\n    width: 100,\n    color: \"white\",\n    textAlign: \"center\"\n  },\n  clientsWrapper: {\n    width: \"90%\",\n    height: \"90%\",\n    borderRadius: 20,\n    padding: 17,\n    backgroundColor: \"#161616\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  registerButtonTitle: {\n    color: \"#000\",\n    fontSize: 18,\n    fontFamily: \"Poppins-Medium\"\n  },\n  registerButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 100,\n    borderRadius: 100,\n    height: 100,\n    margin: 6,\n    backgroundColor: \"#000000\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"black\"\n  },\n  activityIndicator: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#000000\"\n  }\n});","map":{"version":3,"sources":["D:/WorkSpace/Web Projects/Ad-rebate/Screens/Categories.js"],"names":["React","useState","useEffect","test","db","CategoriesScreen","navigation","route","params","paramKey","value","setValue","categorySelectedData","setCategorySelectedData","categoryData","collection","doc","get","then","exists","data","clients","catch","error","console","log","undefined","styles","activityIndicator","container","clientsWrapper","map","name","clientItem","id","navigate","registerButton","clientImage","clientName","goBack","StyleSheet","create","flex","resizeMode","borderRadius","alignItems","width","color","textAlign","height","padding","backgroundColor","flexDirection","flexWrap","registerButtonTitle","fontSize","fontFamily","justifyContent","margin"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n  Image,\r\n  ActivityIndicator,\r\n  TouchableNativeFeedback,\r\n} from \"react-native\";\r\nimport test from \"../assets/images/test.jpg\";\r\nimport { db } from \"../firebases\";\r\nexport default function CategoriesScreen({ navigation, route }) {\r\n  const [value, setValue] = useState(route.params.paramKey);\r\n  const [categorySelectedData, setCategorySelectedData] = useState();\r\n  useEffect(() => {\r\n    if (true) {\r\n      const categoryData = db.collection(\"Categories\").doc(value);\r\n      categoryData\r\n        .get()\r\n        .then(function (doc) {\r\n          if (doc.exists) {\r\n            //console.log(doc.data().clients);\r\n            setCategorySelectedData(doc.data().clients);\r\n          } else {\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n  }, []);\r\n  //console.log(categorySelectedData);\r\n  if (categorySelectedData == undefined) {\r\n    return (\r\n      <View style={styles.activityIndicator}>\r\n        <ActivityIndicator size=\"large\" color=\"#ffffff\" />\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n      <View style={styles.clientsWrapper}>\r\n        {categorySelectedData.map((name) => {\r\n          return (\r\n            <View style={styles.clientItem} key={name.id}>\r\n              <TouchableNativeFeedback\r\n                onPress={() =>\r\n                  navigation.navigate(\"AdsVideo\", {\r\n                    paramKey: name.id,\r\n                  })\r\n                }\r\n              >\r\n                <View style={styles.registerButton}>\r\n                  <Image style={styles.clientImage} source={test}></Image>\r\n                </View>\r\n              </TouchableNativeFeedback>\r\n              <Text style={styles.clientName} key={name.id}>\r\n                {name.name}\r\n              </Text>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n\r\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  clientImage: {\r\n    flex: 1,\r\n    resizeMode: \"contain\",\r\n    borderRadius: 100,\r\n  },\r\n  clientItem: {\r\n    alignItems: \"center\",\r\n  },\r\n  clientName: { width: 100, color: \"white\", textAlign: \"center\" },\r\n  clientsWrapper: {\r\n    width: \"90%\",\r\n    height: \"90%\",\r\n    borderRadius: 20,\r\n    padding: 17,\r\n    backgroundColor: \"#161616\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  registerButtonTitle: {\r\n    color: \"#000\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  registerButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 100,\r\n    borderRadius: 100,\r\n    height: 100,\r\n    margin: 6,\r\n    backgroundColor: \"#000000\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  activityIndicator: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#000000\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}