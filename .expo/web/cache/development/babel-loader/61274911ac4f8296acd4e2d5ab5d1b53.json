{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/run/media/silenttush/Data/WorkSpace/Web Projects/Ad-rebate/Screens/Verification.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"react-native-gesture-handler\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport * as FirebaseRecaptcha from \"expo-firebase-recaptcha\";\nimport * as firebase from \"firebase\";\nimport { firebaseConfig } from \"../firebases\";\nexport default function VerificationScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var recaptchaVerifier = useRef(null);\n  var verificationCodeTextInput = useRef(null);\n\n  var _useState = useState(route.params.paramKey),\n      _useState2 = _slicedToArray(_useState, 2),\n      phoneNumber = _useState2[0],\n      setPhoneNumber = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      verificationId = _useState4[0],\n      setVerificationId = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      verifyError = _useState6[0],\n      setVerifyError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      verifyInProgress = _useState8[0],\n      setVerifyInProgress = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      verificationCode = _useState10[0],\n      setVerificationCode = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmError = _useState12[0],\n      setConfirmError = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      confirmInProgress = _useState14[0],\n      setConfirmInProgress = _useState14[1];\n\n  useEffect(function () {\n    var backAction = function backAction() {\n      navigation.goBack();\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      backHandler.remove();\n    };\n  }, []);\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(FirebaseRecaptcha.FirebaseRecaptchaVerifierModal, {\n    ref: recaptchaVerifier,\n    firebaseConfig: firebaseConfig,\n    title: \"Prove you are hooman!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Verify Mobile Number\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    autoCompleteType: \"tel\",\n    keyboardType: \"phone-pad\",\n    textContentType: \"telephoneNumber\",\n    editable: !verificationId,\n    value: route.params.paramKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableNativeFeedback, {\n    onPress: function _callee() {\n      var phoneProvider, _verificationCodeText, _verificationId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              phoneProvider = new firebase.auth.PhoneAuthProvider();\n              _context.prev = 1;\n              setVerifyError(undefined);\n              setVerifyInProgress(true);\n              setVerificationId(\"\");\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n            case 7:\n              _verificationId = _context.sent;\n              setVerifyInProgress(false);\n              setVerificationId(_verificationId);\n              (_verificationCodeText = verificationCodeTextInput.current) == null ? void 0 : _verificationCodeText.focus();\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              setVerifyError(_context.t0);\n              setVerifyInProgress(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.sendButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.sendButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, (verificationId ? \"Resend\" : \"Send\") + \" Verification Code\"))), verifyError && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Error: \" + verifyError.message), verifyInProgress && React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 32\n    }\n  }), verificationId ? React.createElement(Text, {\n    style: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"verification code sent.\") : undefined, React.createElement(TextInput, {\n    ref: verificationCodeTextInput,\n    style: styles.textInput,\n    editable: !!verificationId,\n    keyboardType: \"phone-pad\",\n    placeholder: \"Enter verification code\",\n    placeholderTextColor: \"#EDEDED\",\n    onChangeText: function onChangeText(verificationCode) {\n      return setVerificationCode(verificationCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableNativeFeedback, {\n    onPress: function _callee2() {\n      var _verificationCodeText2, credential, authResult;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setConfirmError(undefined);\n              setConfirmInProgress(true);\n              credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n            case 6:\n              authResult = _context2.sent;\n              setConfirmInProgress(false);\n              setVerificationId(\"\");\n              setVerificationCode(\"\");\n              (_verificationCodeText2 = verificationCodeTextInput.current) == null ? void 0 : _verificationCodeText2.clear();\n              Alert.alert(\"Phone authentication successful!\");\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              setConfirmError(_context2.t0);\n              setConfirmInProgress(false);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.confirmButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.confirmButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Confirm Verification Code\"))), confirmError && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Error: \" + confirmError.message), confirmInProgress && React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"black\"\n  },\n  sendButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    width: \"80%\",\n    borderRadius: 20,\n    height: 58,\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#8d8d8d\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    marginBottom: 24\n  },\n  sendButtonText: {\n    color: \"#000000\",\n    fontSize: 16,\n    fontFamily: \"Poppins-Medium\"\n  },\n  confirmButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    width: \"80%\",\n    borderRadius: 20,\n    height: 58,\n    backgroundColor: \"#000000\",\n    borderColor: \"#ffffff\",\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    marginBottom: 24\n  },\n  confirmButtonText: {\n    color: \"#ffffff\",\n    fontSize: 16,\n    fontFamily: \"Poppins-Medium\"\n  },\n  content: {\n    marginTop: 50\n  },\n  title: {\n    marginBottom: 50,\n    fontSize: 29,\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontFamily: \"Poppins-Regular\"\n  },\n  subtitle: {\n    marginBottom: 10,\n    opacity: 0.35,\n    fontWeight: \"bold\",\n    color: \"white\",\n    fontFamily: \"Poppins-Regular\"\n  },\n  text: {\n    marginTop: 30,\n    marginBottom: 4,\n    color: \"#EDEDED\",\n    fontSize: 18,\n    fontFamily: \"Poppins-Medium\"\n  },\n  textInput: {\n    backgroundColor: \"#1A1A1A\",\n    borderColor: \"#424242\",\n    borderWidth: 1,\n    color: \"#EDEDED\",\n    fontSize: 18,\n    borderRadius: 20,\n    paddingLeft: 20,\n    paddingRight: 20,\n    width: \"80%\",\n    height: 61,\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    fontSize: 18,\n    fontFamily: \"Poppins-Regular\",\n    marginBottom: 24\n  },\n  error: {\n    marginTop: 0,\n    marginBottom: 24,\n    color: \"#ff6666\",\n    fontSize: 14,\n    fontFamily: \"Poppins-Medium\",\n    alignSelf: \"center\"\n  },\n  success: {\n    marginTop: 0,\n    marginBottom: 24,\n    color: \"#3edb65\",\n    fontFamily: \"Poppins-Medium\",\n    fontSize: 14,\n    alignSelf: \"center\"\n  },\n  loader: {\n    marginTop: 10\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: \"#FFFFFFC0\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }),\n  overlayText: {\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["/run/media/silenttush/Data/WorkSpace/Web Projects/Ad-rebate/Screens/Verification.js"],"names":["React","useRef","useState","useEffect","FirebaseRecaptcha","firebase","firebaseConfig","VerificationScreen","route","navigation","recaptchaVerifier","verificationCodeTextInput","params","paramKey","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verifyError","setVerifyError","verifyInProgress","setVerifyInProgress","verificationCode","setVerificationCode","confirmError","setConfirmError","confirmInProgress","setConfirmInProgress","backAction","goBack","backHandler","BackHandler","addEventListener","remove","Keyboard","dismiss","styles","container","content","title","textInput","phoneProvider","auth","PhoneAuthProvider","undefined","verifyPhoneNumber","current","focus","sendButton","sendButtonText","error","message","loader","success","credential","signInWithCredential","authResult","clear","Alert","alert","confirmButton","confirmButtonText","StyleSheet","create","flex","padding","backgroundColor","justifyContent","alignItems","alignSelf","width","borderRadius","height","borderColor","borderStyle","borderWidth","marginBottom","color","fontSize","fontFamily","marginTop","fontWeight","subtitle","opacity","text","paddingLeft","paddingRight","overlay","absoluteFillObject","overlayText"],"mappings":";;;;;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;;;;;;;;;;;;;;AAgBA,OAAO,KAAKC,iBAAZ,MAAmC,yBAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAASC,cAAT;AAEA,eAAe,SAASC,kBAAT,OAAmD;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAChE,MAAMC,iBAAiB,GAAGT,MAAM,CAAC,IAAD,CAAhC;AACA,MAAMU,yBAAyB,GAAGV,MAAM,CAAC,IAAD,CAAxC;;AAFgE,kBAG1BC,QAAQ,CAACM,KAAK,CAACI,MAAN,CAAaC,QAAd,CAHkB;AAAA;AAAA,MAGzDC,WAHyD;AAAA,MAG5CC,cAH4C;;AAAA,mBAIpBb,QAAQ,CAAC,EAAD,CAJY;AAAA;AAAA,MAIzDc,cAJyD;AAAA,MAIzCC,iBAJyC;;AAAA,mBAK1Bf,QAAQ,EALkB;AAAA;AAAA,MAKzDgB,WALyD;AAAA,MAK5CC,cAL4C;;AAAA,mBAMhBjB,QAAQ,CAAC,KAAD,CANQ;AAAA;AAAA,MAMzDkB,gBANyD;AAAA,MAMvCC,mBANuC;;AAAA,mBAOhBnB,QAAQ,CAAC,EAAD,CAPQ;AAAA;AAAA,MAOzDoB,gBAPyD;AAAA,MAOvCC,mBAPuC;;AAAA,oBAQxBrB,QAAQ,EARgB;AAAA;AAAA,MAQzDsB,YARyD;AAAA,MAQ3CC,eAR2C;;AAAA,oBASdvB,QAAQ,CAAC,KAAD,CATM;AAAA;AAAA,MASzDwB,iBATyD;AAAA,MAStCC,oBATsC;;AAUhExB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMyB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBnB,MAAAA,UAAU,CAACoB,MAAX;AACA,aAAO,IAAP;AACD,KAHD;;AAIA,QAAMC,WAAW,GAAGC,WAAW,CAACC,gBAAZ,CAClB,mBADkB,EAElBJ,UAFkB,CAApB;AAIA,WAAO,YAAM;AACXE,MAAAA,WAAW,CAACG,MAAZ;AACD,KAFD;AAGD,GAZQ,EAYN,EAZM,CAAT;AAaA,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEC,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD,CAAmB,8BAAnB;AACE,IAAA,GAAG,EAAE5B,iBADP;AAEE,IAAA,cAAc,EAAEJ,cAFlB;AAGE,IAAA,KAAK,EAAC,uBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE8B,MAAM,CAACG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANF,EAOE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,SADhB;AAEE,IAAA,gBAAgB,EAAC,KAFnB;AAGE,IAAA,YAAY,EAAC,WAHf;AAIE,IAAA,eAAe,EAAC,iBAJlB;AAKE,IAAA,QAAQ,EAAE,CAACxB,cALb;AAME,IAAA,KAAK,EAAER,KAAK,CAACI,MAAN,CAAaC,QANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAeE,oBAAC,uBAAD;AACE,IAAA,OAAO,EAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AACD4B,cAAAA,aADC,GACe,IAAIpC,QAAQ,CAACqC,IAAT,CAAcC,iBAAlB,EADf;AAAA;AAGLxB,cAAAA,cAAc,CAACyB,SAAD,CAAd;AACAvB,cAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAJ,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AALK;AAAA,+CAMwBwB,aAAa,CAACI,iBAAd,CAC3B/B,WAD2B,EAE3BJ,iBAAiB,CAACoC,OAFS,CANxB;;AAAA;AAMC9B,cAAAA,eAND;AAULK,cAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAJ,cAAAA,iBAAiB,CAACD,eAAD,CAAjB;AACA,uCAAAL,yBAAyB,CAACmC,OAA1B,2CAAmCC,KAAnC;AAZK;AAAA;;AAAA;AAAA;AAAA;AAcL5B,cAAAA,cAAc,aAAd;AACAE,cAAAA,mBAAmB,CAAC,KAAD,CAAnB;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACY,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACEjC,cAAc,GAAG,QAAH,GAAc,MAD9B,yBADF,CApBF,CAfF,EAyCGE,WAAW,IACV,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsChC,WAAW,CAACiC,OAAlD,CA1CJ,EA4CG/B,gBAAgB,IAAI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEgB,MAAM,CAACgB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CvB,EA6CGpC,cAAc,GACb,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACiB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADa,GAEXT,SA/CN,EAgDE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEjC,yBADP;AAEE,IAAA,KAAK,EAAEyB,MAAM,CAACI,SAFhB;AAGE,IAAA,QAAQ,EAAE,CAAC,CAACxB,cAHd;AAIE,IAAA,YAAY,EAAC,WAJf;AAKE,IAAA,WAAW,EAAC,yBALd;AAME,IAAA,oBAAoB,EAAC,SANvB;AAOE,IAAA,YAAY,EAAE,sBAACM,gBAAD;AAAA,aACZC,mBAAmB,CAACD,gBAAD,CADP;AAAA,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDF,EA2DE,oBAAC,uBAAD;AACE,IAAA,OAAO,EAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAELG,cAAAA,eAAe,CAACmB,SAAD,CAAf;AACAjB,cAAAA,oBAAoB,CAAC,IAAD,CAApB;AACM2B,cAAAA,UAJD,GAIcjD,QAAQ,CAACqC,IAAT,CAAcC,iBAAd,CAAgCW,UAAhC,CACjBtC,cADiB,EAEjBM,gBAFiB,CAJd;AAAA;AAAA,+CAQoBjB,QAAQ,CAC9BqC,IADsB,GAEtBa,oBAFsB,CAEDD,UAFC,CARpB;;AAAA;AAQCE,cAAAA,UARD;AAWL7B,cAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAV,cAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAM,cAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACA,wCAAAZ,yBAAyB,CAACmC,OAA1B,4CAAmCW,KAAnC;AACAC,cAAAA,KAAK,CAACC,KAAN,CAAY,kCAAZ;AAfK;AAAA;;AAAA;AAAA;AAAA;AAiBLlC,cAAAA,eAAe,cAAf;AACAE,cAAAA,oBAAoB,CAAC,KAAD,CAApB;;AAlBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACwB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAExB,MAAM,CAACyB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAvBF,CA3DF,EAwFGrC,YAAY,IACX,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACc,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAsC1B,YAAY,CAAC2B,OAAnD,CAzFJ,EA2FGzB,iBAAiB,IAAI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEU,MAAM,CAACgB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3FxB,CAFF,CADF,CADF;AAoGD;AAED,IAAMhB,MAAM,GAAG0B,UAAU,CAACC,MAAX,CAAkB;AAC/B1B,EAAAA,SAAS,EAAE;AACT2B,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,eAAe,EAAE;AAHR,GADoB;AAM/BlB,EAAAA,UAAU,EAAE;AACVmB,IAAAA,cAAc,EAAE,QADN;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGVC,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,KAAK,EAAE,KAJG;AAKVC,IAAAA,YAAY,EAAE,EALJ;AAMVC,IAAAA,MAAM,EAAE,EANE;AAOVN,IAAAA,eAAe,EAAE,SAPP;AAQVO,IAAAA,WAAW,EAAE,SARH;AASVC,IAAAA,WAAW,EAAE,OATH;AAUVC,IAAAA,WAAW,EAAE,CAVH;AAWVC,IAAAA,YAAY,EAAE;AAXJ,GANmB;AAmB/B3B,EAAAA,cAAc,EAAE;AACd4B,IAAAA,KAAK,EAAE,SADO;AAEdC,IAAAA,QAAQ,EAAE,EAFI;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAnBe;AAwB/BnB,EAAAA,aAAa,EAAE;AACbO,IAAAA,cAAc,EAAE,QADH;AAEbC,IAAAA,UAAU,EAAE,QAFC;AAGbC,IAAAA,SAAS,EAAE,QAHE;AAIbC,IAAAA,KAAK,EAAE,KAJM;AAKbC,IAAAA,YAAY,EAAE,EALD;AAMbC,IAAAA,MAAM,EAAE,EANK;AAObN,IAAAA,eAAe,EAAE,SAPJ;AAQbO,IAAAA,WAAW,EAAE,SARA;AASbC,IAAAA,WAAW,EAAE,OATA;AAUbC,IAAAA,WAAW,EAAE,CAVA;AAWbC,IAAAA,YAAY,EAAE;AAXD,GAxBgB;AAqC/Bf,EAAAA,iBAAiB,EAAE;AACjBgB,IAAAA,KAAK,EAAE,SADU;AAEjBC,IAAAA,QAAQ,EAAE,EAFO;AAGjBC,IAAAA,UAAU,EAAE;AAHK,GArCY;AA0C/BzC,EAAAA,OAAO,EAAE;AACP0C,IAAAA,SAAS,EAAE;AADJ,GA1CsB;AA6C/BzC,EAAAA,KAAK,EAAE;AACLqC,IAAAA,YAAY,EAAE,EADT;AAELE,IAAAA,QAAQ,EAAE,EAFL;AAGLG,IAAAA,UAAU,EAAE,MAHP;AAILJ,IAAAA,KAAK,EAAE,OAJF;AAKLE,IAAAA,UAAU,EAAE;AALP,GA7CwB;AAoD/BG,EAAAA,QAAQ,EAAE;AACRN,IAAAA,YAAY,EAAE,EADN;AAERO,IAAAA,OAAO,EAAE,IAFD;AAGRF,IAAAA,UAAU,EAAE,MAHJ;AAIRJ,IAAAA,KAAK,EAAE,OAJC;AAKRE,IAAAA,UAAU,EAAE;AALJ,GApDqB;AA2D/BK,EAAAA,IAAI,EAAE;AACJJ,IAAAA,SAAS,EAAE,EADP;AAEJJ,IAAAA,YAAY,EAAE,CAFV;AAGJC,IAAAA,KAAK,EAAE,SAHH;AAIJC,IAAAA,QAAQ,EAAE,EAJN;AAKJC,IAAAA,UAAU,EAAE;AALR,GA3DyB;AAkE/BvC,EAAAA,SAAS,EAAE;AACT0B,IAAAA,eAAe,EAAE,SADR;AAETO,IAAAA,WAAW,EAAE,SAFJ;AAGTE,IAAAA,WAAW,EAAE,CAHJ;AAITE,IAAAA,KAAK,EAAE,SAJE;AAKTC,IAAAA,QAAQ,EAAE,EALD;AAMTP,IAAAA,YAAY,EAAE,EANL;AAOTc,IAAAA,WAAW,EAAE,EAPJ;AAQTC,IAAAA,YAAY,EAAE,EARL;AASThB,IAAAA,KAAK,EAAE,KATE;AAUTE,IAAAA,MAAM,EAAE,EAVC;AAWTH,IAAAA,SAAS,EAAE,QAXF;AAYTF,IAAAA,cAAc,EAAE,QAZP;AAaTW,IAAAA,QAAQ,EAAE,EAbD;AAcTC,IAAAA,UAAU,EAAE,iBAdH;AAeTH,IAAAA,YAAY,EAAE;AAfL,GAlEoB;AAmF/B1B,EAAAA,KAAK,EAAE;AACL8B,IAAAA,SAAS,EAAE,CADN;AAELJ,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,KAAK,EAAE,SAHF;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,UAAU,EAAE,gBALP;AAMLV,IAAAA,SAAS,EAAE;AANN,GAnFwB;AA2F/BhB,EAAAA,OAAO,EAAE;AACP2B,IAAAA,SAAS,EAAE,CADJ;AAEPJ,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,KAAK,EAAE,SAHA;AAIPE,IAAAA,UAAU,EAAE,gBAJL;AAKPD,IAAAA,QAAQ,EAAE,EALH;AAMPT,IAAAA,SAAS,EAAE;AANJ,GA3FsB;AAmG/BjB,EAAAA,MAAM,EAAE;AACN4B,IAAAA,SAAS,EAAE;AADL,GAnGuB;AAsG/BO,EAAAA,OAAO,kCACFzB,UAAU,CAAC0B,kBADT;AAELtB,IAAAA,eAAe,EAAE,WAFZ;AAGLC,IAAAA,cAAc,EAAE,QAHX;AAILC,IAAAA,UAAU,EAAE;AAJP,IAtGwB;AA4G/BqB,EAAAA,WAAW,EAAE;AACXR,IAAAA,UAAU,EAAE;AADD;AA5GkB,CAAlB,CAAf","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ActivityIndicator,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  Platform,\r\n  StatusBar,\r\n  TouchableNativeFeedback,\r\n  BackHandler,\r\n} from \"react-native\";\r\nimport * as FirebaseRecaptcha from \"expo-firebase-recaptcha\";\r\nimport * as firebase from \"firebase\";\r\nimport { firebaseConfig } from \"../firebases\";\r\n\r\nexport default function VerificationScreen({ route, navigation }) {\r\n  const recaptchaVerifier = useRef(null);\r\n  const verificationCodeTextInput = useRef(null);\r\n  const [phoneNumber, setPhoneNumber] = useState(route.params.paramKey);\r\n  const [verificationId, setVerificationId] = useState(\"\");\r\n  const [verifyError, setVerifyError] = useState();\r\n  const [verifyInProgress, setVerifyInProgress] = useState(false);\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [confirmError, setConfirmError] = useState();\r\n  const [confirmInProgress, setConfirmInProgress] = useState(false);\r\n  useEffect(() => {\r\n    const backAction = () => {\r\n      navigation.goBack();\r\n      return true;\r\n    };\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n    return () => {\r\n      backHandler.remove();\r\n    };\r\n  }, []);\r\n  return (\r\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n      <View style={styles.container}>\r\n        <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n        <View style={styles.content}>\r\n          <FirebaseRecaptcha.FirebaseRecaptchaVerifierModal\r\n            ref={recaptchaVerifier}\r\n            firebaseConfig={firebaseConfig}\r\n            title=\"Prove you are hooman!\"\r\n          />\r\n          <Text style={styles.title}>Verify Mobile Number</Text>\r\n          <TextInput\r\n            style={styles.textInput}\r\n            autoCompleteType=\"tel\"\r\n            keyboardType=\"phone-pad\"\r\n            textContentType=\"telephoneNumber\"\r\n            editable={!verificationId}\r\n            value={route.params.paramKey}\r\n          />\r\n          <TouchableNativeFeedback\r\n            onPress={async () => {\r\n              const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n              try {\r\n                setVerifyError(undefined);\r\n                setVerifyInProgress(true);\r\n                setVerificationId(\"\");\r\n                const verificationId = await phoneProvider.verifyPhoneNumber(\r\n                  phoneNumber,\r\n                  recaptchaVerifier.current\r\n                );\r\n                setVerifyInProgress(false);\r\n                setVerificationId(verificationId);\r\n                verificationCodeTextInput.current?.focus();\r\n              } catch (err) {\r\n                setVerifyError(err);\r\n                setVerifyInProgress(false);\r\n              }\r\n            }}\r\n          >\r\n            <View style={styles.sendButton}>\r\n              <Text style={styles.sendButtonText}>{`${\r\n                verificationId ? \"Resend\" : \"Send\"\r\n              } Verification Code`}</Text>\r\n            </View>\r\n          </TouchableNativeFeedback>\r\n          {verifyError && (\r\n            <Text style={styles.error}>{`Error: ${verifyError.message}`}</Text>\r\n          )}\r\n          {verifyInProgress && <ActivityIndicator style={styles.loader} />}\r\n          {verificationId ? (\r\n            <Text style={styles.success}>verification code sent.</Text>\r\n          ) : undefined}\r\n          <TextInput\r\n            ref={verificationCodeTextInput}\r\n            style={styles.textInput}\r\n            editable={!!verificationId}\r\n            keyboardType=\"phone-pad\"\r\n            placeholder=\"Enter verification code\"\r\n            placeholderTextColor=\"#EDEDED\"\r\n            onChangeText={(verificationCode) =>\r\n              setVerificationCode(verificationCode)\r\n            }\r\n          />\r\n          <TouchableNativeFeedback\r\n            onPress={async () => {\r\n              try {\r\n                setConfirmError(undefined);\r\n                setConfirmInProgress(true);\r\n                const credential = firebase.auth.PhoneAuthProvider.credential(\r\n                  verificationId,\r\n                  verificationCode\r\n                );\r\n                const authResult = await firebase\r\n                  .auth()\r\n                  .signInWithCredential(credential);\r\n                setConfirmInProgress(false);\r\n                setVerificationId(\"\");\r\n                setVerificationCode(\"\");\r\n                verificationCodeTextInput.current?.clear();\r\n                Alert.alert(\"Phone authentication successful!\");\r\n              } catch (err) {\r\n                setConfirmError(err);\r\n                setConfirmInProgress(false);\r\n              }\r\n            }}\r\n          >\r\n            <View style={styles.confirmButton}>\r\n              <Text style={styles.confirmButtonText}>\r\n                Confirm Verification Code\r\n              </Text>\r\n            </View>\r\n          </TouchableNativeFeedback>\r\n          {confirmError && (\r\n            <Text style={styles.error}>{`Error: ${confirmError.message}`}</Text>\r\n          )}\r\n          {confirmInProgress && <ActivityIndicator style={styles.loader} />}\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"black\",\r\n  },\r\n  sendButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    width: \"80%\",\r\n    borderRadius: 20,\r\n    height: 58,\r\n    backgroundColor: \"#ffffff\",\r\n    borderColor: \"#8d8d8d\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    marginBottom: 24,\r\n  },\r\n  sendButtonText: {\r\n    color: \"#000000\",\r\n    fontSize: 16,\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  confirmButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    width: \"80%\",\r\n    borderRadius: 20,\r\n    height: 58,\r\n    backgroundColor: \"#000000\",\r\n    borderColor: \"#ffffff\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    marginBottom: 24,\r\n  },\r\n  confirmButtonText: {\r\n    color: \"#ffffff\",\r\n    fontSize: 16,\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  content: {\r\n    marginTop: 50,\r\n  },\r\n  title: {\r\n    marginBottom: 50,\r\n    fontSize: 29,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontFamily: \"Poppins-Regular\",\r\n  },\r\n  subtitle: {\r\n    marginBottom: 10,\r\n    opacity: 0.35,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontFamily: \"Poppins-Regular\",\r\n  },\r\n  text: {\r\n    marginTop: 30,\r\n    marginBottom: 4,\r\n    color: \"#EDEDED\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  textInput: {\r\n    backgroundColor: \"#1A1A1A\",\r\n    borderColor: \"#424242\",\r\n    borderWidth: 1,\r\n    color: \"#EDEDED\",\r\n    fontSize: 18,\r\n    borderRadius: 20,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    width: \"80%\",\r\n    height: 61,\r\n    alignSelf: \"center\",\r\n    justifyContent: \"center\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Regular\",\r\n    marginBottom: 24,\r\n  },\r\n  error: {\r\n    marginTop: 0,\r\n    marginBottom: 24,\r\n    color: \"#ff6666\",\r\n    fontSize: 14,\r\n    fontFamily: \"Poppins-Medium\",\r\n    alignSelf: \"center\",\r\n  },\r\n  success: {\r\n    marginTop: 0,\r\n    marginBottom: 24,\r\n    color: \"#3edb65\",\r\n    fontFamily: \"Poppins-Medium\",\r\n    fontSize: 14,\r\n    alignSelf: \"center\",\r\n  },\r\n  loader: {\r\n    marginTop: 10,\r\n  },\r\n  overlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: \"#FFFFFFC0\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  overlayText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}