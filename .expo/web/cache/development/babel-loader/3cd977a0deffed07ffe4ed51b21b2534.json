{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\App\\\\Ad-Rebate\\\\ad-rebate\\\\Screens\\\\Verification.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport * as FirebaseRecaptcha from \"expo-firebase-recaptcha\";\nimport * as firebase from 'firebase';\nimport { firebaseConfig } from \"../firebases\";\nexport default function VerificationScreen(_ref) {\n  var route = _ref.route;\n  var recaptchaVerifier = React.useRef(null);\n  var verificationCodeTextInput = React.useRef(null);\n\n  var _React$useState = React.useState(route.params.paramKey),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      phoneNumber = _React$useState2[0],\n      setPhoneNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      verificationId = _React$useState4[0],\n      setVerificationId = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      verifyError = _React$useState6[0],\n      setVerifyError = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      verifyInProgress = _React$useState8[0],\n      setVerifyInProgress = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      verificationCode = _React$useState10[0],\n      setVerificationCode = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      confirmError = _React$useState12[0],\n      setConfirmError = _React$useState12[1];\n\n  var _React$useState13 = React.useState(false),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      confirmInProgress = _React$useState14[0],\n      setConfirmInProgress = _React$useState14[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(FirebaseRecaptcha.FirebaseRecaptchaVerifierModal, {\n    ref: recaptchaVerifier,\n    firebaseConfig: firebaseConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Firebase Authentication\"), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Enter the number\"), React.createElement(TextInput, {\n    style: styles.textInput,\n    autoCompleteType: \"tel\",\n    keyboardType: \"phone-pad\",\n    textContentType: \"telephoneNumber\",\n    editable: !verificationId,\n    value: route.params.paramKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: (verificationId ? \"Resend\" : \"Send\") + \" Verification Code\",\n    disabled: !phoneNumber,\n    onPress: function _callee() {\n      var phoneProvider, _verificationCodeText, _verificationId;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              phoneProvider = new firebase.auth.PhoneAuthProvider();\n              _context.prev = 1;\n              setVerifyError(undefined);\n              setVerifyInProgress(true);\n              setVerificationId(\"\");\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(phoneProvider.verifyPhoneNumber(phoneNumber, recaptchaVerifier.current));\n\n            case 7:\n              _verificationId = _context.sent;\n              setVerifyInProgress(false);\n              setVerificationId(_verificationId);\n              (_verificationCodeText = verificationCodeTextInput.current) == null ? void 0 : _verificationCodeText.focus();\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              setVerifyError(_context.t0);\n              setVerifyInProgress(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 13]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), verifyError && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Error: \" + verifyError.message), verifyInProgress && React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 30\n    }\n  }), verificationId ? React.createElement(Text, {\n    style: styles.success,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"A verification code has been sent to your phone\") : undefined, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Enter verification code\"), React.createElement(TextInput, {\n    ref: verificationCodeTextInput,\n    style: styles.textInput,\n    editable: !!verificationId,\n    placeholder: \"123456\",\n    onChangeText: function onChangeText(verificationCode) {\n      return setVerificationCode(verificationCode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Confirm Verification Code\",\n    disabled: !verificationCode,\n    onPress: function _callee2() {\n      var _verificationCodeText2, credential, authResult;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              setConfirmError(undefined);\n              setConfirmInProgress(true);\n              credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithCredential(credential));\n\n            case 6:\n              authResult = _context2.sent;\n              setConfirmInProgress(false);\n              setVerificationId(\"\");\n              setVerificationCode(\"\");\n              (_verificationCodeText2 = verificationCodeTextInput.current) == null ? void 0 : _verificationCodeText2.clear();\n              Alert.alert(\"Phone authentication successful!\");\n              _context2.next = 18;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              setConfirmError(_context2.t0);\n              setConfirmInProgress(false);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), confirmError && React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Error: \" + confirmError.message), confirmInProgress && React.createElement(ActivityIndicator, {\n    style: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  content: {\n    marginTop: 50\n  },\n  title: {\n    marginBottom: 2,\n    fontSize: 29,\n    fontWeight: \"bold\"\n  },\n  subtitle: {\n    marginBottom: 10,\n    opacity: 0.35,\n    fontWeight: \"bold\"\n  },\n  text: {\n    marginTop: 30,\n    marginBottom: 4\n  },\n  textInput: {\n    marginBottom: 8,\n    fontSize: 17,\n    fontWeight: \"bold\"\n  },\n  error: {\n    marginTop: 10,\n    fontWeight: \"bold\",\n    color: \"red\"\n  },\n  success: {\n    marginTop: 10,\n    fontWeight: \"bold\",\n    color: \"blue\"\n  },\n  loader: {\n    marginTop: 10\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: \"#FFFFFFC0\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }),\n  overlayText: {\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/App/Ad-Rebate/ad-rebate/Screens/Verification.js"],"names":["React","FirebaseRecaptcha","firebase","firebaseConfig","VerificationScreen","route","recaptchaVerifier","useRef","verificationCodeTextInput","useState","params","paramKey","phoneNumber","setPhoneNumber","verificationId","setVerificationId","verifyError","setVerifyError","verifyInProgress","setVerifyInProgress","verificationCode","setVerificationCode","confirmError","setConfirmError","confirmInProgress","setConfirmInProgress","styles","container","content","title","text","textInput","phoneProvider","auth","PhoneAuthProvider","undefined","verifyPhoneNumber","current","focus","error","message","loader","success","credential","signInWithCredential","authResult","clear","Alert","alert","StyleSheet","create","flex","padding","marginTop","marginBottom","fontSize","fontWeight","subtitle","opacity","color","overlay","absoluteFillObject","backgroundColor","justifyContent","alignItems","overlayText"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Platform,\r\n  StatusBar,\r\n} from \"react-native\";\r\nimport * as FirebaseRecaptcha from \"expo-firebase-recaptcha\";\r\nimport * as firebase from 'firebase'\r\nimport { firebaseConfig } from \"../firebases\";\r\n\r\nexport default function VerificationScreen({ route }) {\r\n  const recaptchaVerifier = React.useRef(null);\r\n  const verificationCodeTextInput = React.useRef(null);\r\n  const [phoneNumber, setPhoneNumber] = React.useState(route.params.paramKey);\r\n  const [verificationId, setVerificationId] = React.useState(\"\");\r\n  const [verifyError, setVerifyError] = React.useState();\r\n  const [verifyInProgress, setVerifyInProgress] = React.useState(false);\r\n  const [verificationCode, setVerificationCode] = React.useState(\"\");\r\n  const [confirmError, setConfirmError] = React.useState();\r\n  const [confirmInProgress, setConfirmInProgress] = React.useState(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n      <View style={styles.content}>\r\n        <FirebaseRecaptcha.FirebaseRecaptchaVerifierModal\r\n          ref={recaptchaVerifier}\r\n          firebaseConfig={firebaseConfig}\r\n        />\r\n        <Text style={styles.title}>Firebase Authentication</Text>\r\n        <Text style={styles.text}>Enter the number</Text>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          autoCompleteType=\"tel\"\r\n          keyboardType=\"phone-pad\"\r\n          textContentType=\"telephoneNumber\"\r\n          editable={!verificationId}\r\n          value={route.params.paramKey}\r\n        />\r\n        <Button\r\n          title={`${verificationId ? \"Resend\" : \"Send\"} Verification Code`}\r\n          disabled={!phoneNumber}\r\n          onPress={async () => {\r\n            const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n            try {\r\n              setVerifyError(undefined);\r\n              setVerifyInProgress(true);\r\n              setVerificationId(\"\");\r\n              const verificationId = await phoneProvider.verifyPhoneNumber(\r\n                phoneNumber,\r\n                recaptchaVerifier.current\r\n              );\r\n              setVerifyInProgress(false);\r\n              setVerificationId(verificationId);\r\n              verificationCodeTextInput.current?.focus();\r\n            } catch (err) {\r\n              setVerifyError(err);\r\n              setVerifyInProgress(false);\r\n            }\r\n          }}\r\n        />\r\n        {verifyError && (\r\n          <Text style={styles.error}>{`Error: ${verifyError.message}`}</Text>\r\n        )}\r\n        {verifyInProgress && <ActivityIndicator style={styles.loader} />}\r\n        {verificationId ? (\r\n          <Text style={styles.success}>\r\n            A verification code has been sent to your phone\r\n          </Text>\r\n        ) : undefined}\r\n        <Text style={styles.text}>Enter verification code</Text>\r\n        <TextInput\r\n          ref={verificationCodeTextInput}\r\n          style={styles.textInput}\r\n          editable={!!verificationId}\r\n          placeholder=\"123456\"\r\n          onChangeText={(verificationCode) =>\r\n            setVerificationCode(verificationCode)\r\n          }\r\n        />\r\n        <Button\r\n          title=\"Confirm Verification Code\"\r\n          disabled={!verificationCode}\r\n          onPress={async () => {\r\n            try {\r\n              setConfirmError(undefined);\r\n              setConfirmInProgress(true);\r\n              const credential = firebase.auth.PhoneAuthProvider.credential(\r\n                verificationId,\r\n                verificationCode\r\n              );\r\n              const authResult = await firebase\r\n                .auth()\r\n                .signInWithCredential(credential);\r\n              setConfirmInProgress(false);\r\n              setVerificationId(\"\");\r\n              setVerificationCode(\"\");\r\n              verificationCodeTextInput.current?.clear();\r\n              Alert.alert(\"Phone authentication successful!\");\r\n            } catch (err) {\r\n              setConfirmError(err);\r\n              setConfirmInProgress(false);\r\n            }\r\n          }}\r\n        />\r\n        {confirmError && (\r\n          <Text style={styles.error}>{`Error: ${confirmError.message}`}</Text>\r\n        )}\r\n        {confirmInProgress && <ActivityIndicator style={styles.loader} />}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  content: {\r\n    marginTop: 50,\r\n  },\r\n  title: {\r\n    marginBottom: 2,\r\n    fontSize: 29,\r\n    fontWeight: \"bold\",\r\n  },\r\n  subtitle: {\r\n    marginBottom: 10,\r\n    opacity: 0.35,\r\n    fontWeight: \"bold\",\r\n  },\r\n  text: {\r\n    marginTop: 30,\r\n    marginBottom: 4,\r\n  },\r\n  textInput: {\r\n    marginBottom: 8,\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n  },\r\n  error: {\r\n    marginTop: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"red\",\r\n  },\r\n  success: {\r\n    marginTop: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"blue\",\r\n  },\r\n  loader: {\r\n    marginTop: 10,\r\n  },\r\n  overlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    backgroundColor: \"#FFFFFFC0\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  overlayText: {\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}