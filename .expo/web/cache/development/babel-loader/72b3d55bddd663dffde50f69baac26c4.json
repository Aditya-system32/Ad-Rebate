{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\Web Projects\\\\Ad-rebate\\\\Screens\\\\AdsVideo.js\";\nimport \"react-native-gesture-handler\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Video from \"react-native-video\";\nimport { db } from \"../firebases\";\nimport { color } from \"react-native-reanimated\";\nexport default function AdsVideoScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(route.params.paramKey),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      adsSelectedData = _useState4[0],\n      setAdsSelectedData = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      adsOfSelectedClient = _useState6[0],\n      setAdsOfSelectedClient = _useState6[1];\n\n  var tempArray = [];\n  var randomNumber = Math.floor(Math.random() * 2 + 0);\n  useEffect(function () {\n    var temp = [];\n\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", db.collectionGroup(\"Ads\").get().then(function (snap) {\n                snap.forEach(function (doc) {\n                  temp.push(doc.data());\n                });\n                setAdsSelectedData(temp);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  tempArray.push(adsSelectedData.filter(function (client) {\n    return client.client == value;\n  })[randomNumber]);\n  console.log(tempArray);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, value), React.createElement(Video, {\n    source: {\n      uri: \"https://firebasestorage.googleapis.com/v0/b/ad-rebate2020.appspot.com/o/ads%2FTusharBurger%2Fpexels-cottonbro-5486045.mp4?alt=media&token=ef521f1a-4f60-43c5-b0e6-fb7ced1894a5\"\n    },\n    onError: function onError(err) {\n      console.log(err);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Go back\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/WorkSpace/Web Projects/Ad-rebate/Screens/AdsVideo.js"],"names":["React","useState","useEffect","Video","db","color","AdsVideoScreen","navigation","route","params","paramKey","value","setValue","adsSelectedData","setAdsSelectedData","adsOfSelectedClient","setAdsOfSelectedClient","tempArray","randomNumber","Math","floor","random","temp","collectionGroup","get","then","snap","forEach","doc","push","data","filter","client","console","log","styles","container","uri","err","goBack","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,EAAT;AACA,SAASC,KAAT,QAAsB,yBAAtB;AAEA,eAAe,SAASC,cAAT,OAA+C;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBAClCP,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaC,QAAd,CAD0B;AAAA;AAAA,MACrDC,KADqD;AAAA,MAC9CC,QAD8C;;AAAA,mBAEdX,QAAQ,CAAC,EAAD,CAFM;AAAA;AAAA,MAErDY,eAFqD;AAAA,MAEpCC,kBAFoC;;AAAA,mBAGNb,QAAQ,CAAC,EAAD,CAHF;AAAA;AAAA,MAGrDc,mBAHqD;AAAA,MAGhCC,sBAHgC;;AAI5D,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAArB;AACAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,IAAI,GAAG,EAAb;;AACA,KAAC;AAAA;AAAA;AAAA;AAAA;AAAA,+CACClB,EAAE,CACCmB,eADH,CACmB,KADnB,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,IAAD,EAAU;AACdA,gBAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,GAAD,EAAS;AAEpBN,kBAAAA,IAAI,CAACO,IAAL,CAAUD,GAAG,CAACE,IAAJ,EAAV;AAED,iBAJD;AAKAhB,gBAAAA,kBAAkB,CAACQ,IAAD,CAAlB;AACD,eAVH,CADD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAgBD,GAlBQ,EAkBN,EAlBM,CAAT;AA0CAL,EAAAA,SAAS,CAACY,IAAV,CACEhB,eAAe,CAACkB,MAAhB,CAAuB,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACA,MAAP,IAAiBrB,KAA7B;AAAA,GAAvB,EAA2DO,YAA3D,CADF;AAGAe,EAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOzB,KAAP,CAFF,EAGE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AACN0B,MAAAA,GAAG,EACD;AAFI,KADV;AAKE,IAAA,OAAO,EAAE,iBAACC,GAAD,EAAS;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAYE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAE;AAAA,aAAM/B,UAAU,CAACgC,MAAX,EAAN;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport Video from \"react-native-video\";\r\nimport { db } from \"../firebases\";\r\nimport { color } from \"react-native-reanimated\";\r\n\r\nexport default function AdsVideoScreen({ navigation, route }) {\r\n  const [value, setValue] = useState(route.params.paramKey);\r\n  const [adsSelectedData, setAdsSelectedData] = useState([]);\r\n  const [adsOfSelectedClient, setAdsOfSelectedClient] = useState([]);\r\n  const tempArray = [];\r\n  const randomNumber = Math.floor(Math.random() * 2 + 0);\r\n  useEffect(() => {\r\n    const temp = [];\r\n    (async () =>\r\n      db\r\n        .collectionGroup(\"Ads\")\r\n        .get()\r\n        .then((snap) => {\r\n          snap.forEach((doc) => {\r\n            //console.log(\"doc data\" + doc.data());\r\n            temp.push(doc.data());\r\n            //console.log(doc.id, \" => \", doc.data());\r\n          });\r\n          setAdsSelectedData(temp);\r\n        }))();\r\n\r\n    /*.catch(function (error) {\r\n          console.log(\"Error getting document:\", error);\r\n        });*/\r\n  }, []);\r\n  /*useEffect(() => {\r\n    //console.log(adsSelecteData);\r\n  }, [adsSelecteData]);*/\r\n  /*tempArray.push(adsSelecteData.filter((client) => client.client == value));\r\n  setAdsOfSelectedClient(tempArray);\r\n  console.log(adsOfSelectedClient);\r\n  /*videoPlayBack.push(\r\n    adsOfSelectedClient[Math.floor(Math.random() * (2 - 0)) + 0]\r\n  );*/\r\n  //console.log(videoPlayBack);\r\n  // const tempArray = []\r\n  // adsSelecteData;\r\n  // const adsOfSelectedClient = adsSelecteData.filter((client) => client.client == value)\r\n  // const randomNo = 0\r\n  // tempArray.push(adsOfSelectedClient[randomNo])\r\n  // const adsExcludingSelectedClient = adsSelecteData.filter(client=>{\r\n  //   client.client != value\r\n  // })\r\n  // for(let i = 0;i<2;i++){\r\n  //   randomNo\r\n  //   tempArray.push(adsExcludingSelectedClient[randomNo])\r\n  // }\r\n\r\n  tempArray.push(\r\n    adsSelectedData.filter((client) => client.client == value)[randomNumber]\r\n  );\r\n  console.log(tempArray);\r\n\r\n  //console.log(adsSelecteData.filter((client) => client.client != value).length);\r\n  //console.log(videoPlayBack);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n      <Text>{value}</Text>\r\n      <Video\r\n        source={{\r\n          uri:\r\n            \"https://firebasestorage.googleapis.com/v0/b/ad-rebate2020.appspot.com/o/ads%2FTusharBurger%2Fpexels-cottonbro-5486045.mp4?alt=media&token=ef521f1a-4f60-43c5-b0e6-fb7ced1894a5\",\r\n        }}\r\n        onError={(err) => {\r\n          console.log(err);\r\n        }}\r\n      />\r\n      <Button title=\"Go back\" onPress={() => navigation.goBack()} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}