{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\Web Projects\\\\Ad-rebate\\\\Screens\\\\BannerImages.js\";\nimport React from \"react\";\nimport { useEffect, useState, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { SliderBox } from \"react-native-image-slider-box\";\nimport { AuthContext } from \"../routes/AuthProvider\";\nvar bannerImages = [\"https://i.ibb.co/0DBMMw6/sam-moqadam-W8-Cyjblr-F8-U-unsplash.jpg\", \"https://i.ibb.co/dGwGN37/clem-onojeghuo-NT3q-P7-Wbmz-E-unsplash.jpg\", \"https://i.ibb.co/fv933B7/sharon-mccutcheon-8a5e-J1-mm-Q-unsplash.jpg\", \"https://i.ibb.co/G3vpZ0S/maximilian-bruck-4-SKd-Rc-Y13j4-unsplash.jpg\"];\nexport default function BannerImages() {\n  var _useContext = useContext(AuthContext),\n      bannerData = _useContext.bannerData,\n      user = _useContext.user;\n\n  var _useState = useState(\"Play Store Link\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      shareMessage = _useState2[0],\n      setShareMessage = _useState2[1];\n\n  useEffect(function () {\n    if (user) {\n      setShareMessage(\"Ad-Rebate\\n\\nReferral Id - \\n\" + user.uid + \"\\n\\nuse this Id to get Coupon\\n\\n\" + \"https://play.google.com/store/apps/details?id=\" + \"appPackageName\");\n    }\n  }, []);\n\n  var onShare = function onShare(index) {\n    var result;\n    return _regeneratorRuntime.async(function onShare$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(index == 5)) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Share.share({\n              message: shareMessage\n            }));\n\n          case 4:\n            result = _context.sent;\n\n            if (result.action === Share.sharedAction) {\n              if (result.activityType) {} else {}\n            } else if (result.action === Share.dismissedAction) {}\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            alert(_context.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(SliderBox, {\n    images: bannerData == undefined ? bannerImages : bannerData.banners,\n    circleLoop: true,\n    autoplay: true,\n    resizeMode: \"cover\",\n    dotColor: \"#FFF\",\n    inactiveDotColor: \"#90A4AE\",\n    onCurrentImagePressed: onShare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["D:/WorkSpace/Web Projects/Ad-rebate/Screens/BannerImages.js"],"names":["React","useEffect","useState","useContext","SliderBox","AuthContext","bannerImages","BannerImages","bannerData","user","shareMessage","setShareMessage","uid","onShare","index","Share","share","message","result","action","sharedAction","activityType","dismissedAction","alert","styles","container","undefined","banners","StyleSheet","create","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;;;;;;;;;;AAYA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,WAAT;AAEA,IAAMC,YAAY,GAAG,CACnB,kEADmB,EAEnB,qEAFmB,EAGnB,sEAHmB,EAInB,uEAJmB,CAArB;AAOA,eAAe,SAASC,YAAT,GAAwB;AAAA,oBACRJ,UAAU,CAACE,WAAD,CADF;AAAA,MAC7BG,UAD6B,eAC7BA,UAD6B;AAAA,MACjBC,IADiB,eACjBA,IADiB;;AAAA,kBAEGP,QAAQ,CAAC,iBAAD,CAFX;AAAA;AAAA,MAE9BQ,YAF8B;AAAA,MAEhBC,eAFgB;;AAIrCV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,IAAJ,EAAU;AACRE,MAAAA,eAAe,CACb,kCACEF,IAAI,CAACG,GADP,GAEE,mCAFF,GAGE,gDAHF,GAIE,gBALW,CAAf;AAOD;AACF,GAVQ,EAUN,EAVM,CAAT;;AAWA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVA,KAAK,IAAI,CADC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAGWC,KAAK,CAACC,KAAN,CAAY;AAC/BC,cAAAA,OAAO,EAAEP;AADsB,aAAZ,CAHX;;AAAA;AAGJQ,YAAAA,MAHI;;AAMV,gBAAIA,MAAM,CAACC,MAAP,KAAkBJ,KAAK,CAACK,YAA5B,EAA0C;AACxC,kBAAIF,MAAM,CAACG,YAAX,EAAyB,CAExB,CAFD,MAEO,CAEN;AACF,aAND,MAMO,IAAIH,MAAM,CAACC,MAAP,KAAkBJ,KAAK,CAACO,eAA5B,EAA6C,CAEnD;;AAdS;AAAA;;AAAA;AAAA;AAAA;AAgBVC,YAAAA,KAAK,CAAC,YAAMN,OAAP,CAAL;;AAhBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAqBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAC,OAA3B;AAAmC,IAAA,QAAQ,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAEjB,UAAU,IAAIkB,SAAd,GAA0BpB,YAA1B,GAAyCE,UAAU,CAACmB,OAD9D;AAEE,IAAA,UAAU,EAAE,IAFd;AAGE,IAAA,QAAQ,EAAE,IAHZ;AAIE,IAAA,UAAU,EAAC,OAJb;AAKE,IAAA,QAAQ,EAAC,MALX;AAME,IAAA,gBAAgB,EAAC,SANnB;AAOE,IAAA,qBAAqB,EAAEd,OAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAcD;AAED,IAAMW,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,MAAM,EAAE,MADC;AAETC,IAAAA,KAAK,EAAE;AAFE;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  ScrollView,\r\n  Dimensions,\r\n  Image,\r\n  StatusBar,\r\n  FlatList,\r\n  Animated,\r\n  Share,\r\n} from \"react-native\";\r\nimport { SliderBox } from \"react-native-image-slider-box\";\r\nimport { AuthContext } from \"../routes/AuthProvider\";\r\n\r\nconst bannerImages = [\r\n  \"https://i.ibb.co/0DBMMw6/sam-moqadam-W8-Cyjblr-F8-U-unsplash.jpg\",\r\n  \"https://i.ibb.co/dGwGN37/clem-onojeghuo-NT3q-P7-Wbmz-E-unsplash.jpg\",\r\n  \"https://i.ibb.co/fv933B7/sharon-mccutcheon-8a5e-J1-mm-Q-unsplash.jpg\",\r\n  \"https://i.ibb.co/G3vpZ0S/maximilian-bruck-4-SKd-Rc-Y13j4-unsplash.jpg\",\r\n];\r\n\r\nexport default function BannerImages() {\r\n  const { bannerData, user } = useContext(AuthContext);\r\n  const [shareMessage, setShareMessage] = useState(\"Play Store Link\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setShareMessage(\r\n        \"Ad-Rebate\\n\\nReferral Id - \\n\" +\r\n          user.uid +\r\n          \"\\n\\nuse this Id to get Coupon\\n\\n\" +\r\n          \"https://play.google.com/store/apps/details?id=\" +\r\n          \"appPackageName\"\r\n      );\r\n    }\r\n  }, []);\r\n  const onShare = async (index) => {\r\n    if (index == 5) {\r\n      try {\r\n        const result = await Share.share({\r\n          message: shareMessage,\r\n        });\r\n        if (result.action === Share.sharedAction) {\r\n          if (result.activityType) {\r\n            // shared with activity type of result.activityType\r\n          } else {\r\n            // shared\r\n          }\r\n        } else if (result.action === Share.dismissedAction) {\r\n          // dismissed\r\n        }\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n      <SliderBox\r\n        images={bannerData == undefined ? bannerImages : bannerData.banners}\r\n        circleLoop={true}\r\n        autoplay={true}\r\n        resizeMode=\"cover\"\r\n        dotColor=\"#FFF\"\r\n        inactiveDotColor=\"#90A4AE\"\r\n        onCurrentImagePressed={onShare}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}