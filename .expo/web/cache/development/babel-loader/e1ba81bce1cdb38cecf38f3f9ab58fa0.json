{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\Web Projects\\\\Ad-rebate\\\\MainRoutes.js\";\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Navigation from \"./routes/Navigation\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport { AuthContext } from \"./routes/AuthProvider\";\nimport * as firebase from \"firebase\";\nimport NavigationLogged from \"./routes/NavigationLogged\";\n\nvar fetchfonts = function fetchfonts() {\n  return Font.loadAsync({\n    \"Poppins-Medium\": require(\"./assets/fonts/Poppins-Medium.ttf\"),\n    \"Poppins-SemiBold\": require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n    \"Poppins-Regular\": require(\"./assets/fonts/Poppins-Regular.ttf\")\n  });\n};\n\nvar fontLoadingError = function fontLoadingError() {\n  return console.log(\"OOPS Font not Loaded\");\n};\n\nfunction MainRoute() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      fontLoaded = _React$useState2[0],\n      setFontLoaded = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      user = _React$useContext.user,\n      setUser = _React$useContext.setUser;\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      initializing = _React$useState4[0],\n      setInitializing = _React$useState4[1];\n\n  var onAuthStateChanged = function onAuthStateChanged(user) {\n    return _regeneratorRuntime.async(function onAuthStateChanged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setUser(user);\n            if (initializing) setInitializing(false);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n\n  if (!fontLoaded && initializing) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchfonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      onError: fontLoadingError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, user ? React.createElement(NavigationLogged, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }) : React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }\n  }));\n}\n\nexport default MainRoute;","map":{"version":3,"sources":["D:/WorkSpace/Web Projects/Ad-rebate/MainRoutes.js"],"names":["React","NavigationContainer","Navigation","Font","AppLoading","AuthContext","firebase","NavigationLogged","fetchfonts","loadAsync","require","fontLoadingError","console","log","MainRoute","useState","fontLoaded","setFontLoaded","useContext","user","setUser","initializing","setInitializing","onAuthStateChanged","useEffect","subscriber","auth"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,WAAT;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAOC,gBAAP;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOL,IAAI,CAACM,SAAL,CAAe;AACpB,sBAAkBC,OAAO,qCADL;AAEpB,wBAAoBA,OAAO,uCAFP;AAGpB,uBAAmBA,OAAO;AAHN,GAAf,CAAP;AAKD,CAND;;AAQA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,SAAOC,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAP;AACD,CAFD;;AAIA,SAASC,SAAT,GAAqB;AAAA,wBACiBd,KAAK,CAACe,QAAN,CAAe,KAAf,CADjB;AAAA;AAAA,MACZC,UADY;AAAA,MACAC,aADA;;AAAA,0BAKfjB,KAAK,CAACkB,UAAN,CAAiBb,WAAjB,CALe;AAAA,MAGjBc,IAHiB,qBAGjBA,IAHiB;AAAA,MAIjBC,OAJiB,qBAIjBA,OAJiB;;AAAA,yBAMqBpB,KAAK,CAACe,QAAN,CAAe,IAAf,CANrB;AAAA;AAAA,MAMZM,YANY;AAAA,MAMEC,eANF;;AAOnB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AACzBC,YAAAA,OAAO,CAACD,IAAD,CAAP;AACA,gBAAIE,YAAJ,EAAkBC,eAAe,CAAC,KAAD,CAAf;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAKAtB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,YAAM;AACpB,QAAMC,UAAU,GAAGnB,QAAQ,CAACoB,IAAT,GAAgBH,kBAAhB,CAAmCA,kBAAnC,CAAnB;AACA,WAAOE,UAAP;AACD,GAHD,EAGG,EAHH;;AAKA,MAAI,CAACT,UAAD,IAAeK,YAAnB,EAAiC;AAC/B,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEb,UADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMS,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAEN,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AACD,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAA0B,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjC,CADF;AAKD;;AAED,eAAeL,SAAf","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport Navigation from \"./routes/Navigation\";\r\nimport * as Font from \"expo-font\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { AuthContext } from \"./routes/AuthProvider\";\r\nimport * as firebase from \"firebase\";\r\nimport NavigationLogged from \"./routes/NavigationLogged\";\r\nconst fetchfonts = () => {\r\n  return Font.loadAsync({\r\n    \"Poppins-Medium\": require(\"./assets/fonts/Poppins-Medium.ttf\"),\r\n    \"Poppins-SemiBold\": require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\r\n    \"Poppins-Regular\": require(\"./assets/fonts/Poppins-Regular.ttf\"),\r\n  });\r\n};\r\n\r\nconst fontLoadingError = () => {\r\n  return console.log(\"OOPS Font not Loaded\");\r\n};\r\n\r\nfunction MainRoute() {\r\n  const [fontLoaded, setFontLoaded] = React.useState(false);\r\n  const {\r\n    user,\r\n    setUser,\r\n  } = React.useContext(AuthContext);\r\n  const [initializing, setInitializing] = React.useState(true);\r\n  const onAuthStateChanged = async (user) => {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber;\r\n  }, []);\r\n\r\n  if (!fontLoaded && initializing) {\r\n    return (\r\n      <AppLoading\r\n        startAsync={fetchfonts}\r\n        onFinish={() => setFontLoaded(true)}\r\n        onError={fontLoadingError}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <NavigationContainer>\r\n      {user ? <NavigationLogged /> : <Navigation />}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default MainRoute;\r\n"]},"metadata":{},"sourceType":"module"}