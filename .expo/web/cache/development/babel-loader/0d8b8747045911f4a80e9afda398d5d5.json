{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/run/media/silenttush/Data/WorkSpace/Web Projects/Ad-rebate/Screens/ProfileUpdate.js\";\nimport \"react-native-gesture-handler\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { globalstyles } from \"../styles/global\";\nimport { db } from \"../firebases\";\nimport { AuthContext } from \"../routes/AuthProvider\";\nexport default function ProfileScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"bhilai\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullName = _useState4[0],\n      setFullName = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user;\n\n  var _useState5 = useState([{\n    value: \"bhilai\",\n    label: \"Bhilai\",\n    key: \"Bhilai\"\n  }, {\n    value: \"raipur\",\n    label: \"Raipur\",\n    key: \"Raipur\"\n  }]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locationOptions = _useState6[0],\n      setLocationOptions = _useState6[1];\n\n  useEffect(function () {\n    var backAction = function backAction() {\n      navigation.goBack();\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      backHandler.remove();\n    };\n  }, []);\n\n  var update = function update() {\n    if (fullName != undefined) {\n      db.collection(\"Users\").doc(user.uid).set({\n        username: fullName,\n        location: location\n      }, {\n        merge: true\n      }).then(function () {\n        return navigation.pop();\n      }, ToastAndroid.show(\"Profile Updated\", ToastAndroid.SHORT)).catch(function (err) {\n        console.log(\"Error getting Updated:\", err);\n      });\n    } else {\n      db.collection(\"Users\").doc(user.uid).set({\n        location: location\n      }, {\n        merge: true\n      }).then(function () {\n        return navigation.pop();\n      }, ToastAndroid.show(\"Profile Updated\", ToastAndroid.SHORT)).catch(function (err) {\n        console.log(\"Error getting Updated:\", err);\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: globalstyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.welcomeBackWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.welcomeBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Update profile\")), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textinput,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#EDEDED\",\n    color: \"#fff\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.picker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Picker, {\n    style: {\n      width: \"100%\",\n      height: 61,\n      color: \"#fff\"\n    },\n    selectedValue: location,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setLocation(itemValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, locationOptions.map(function (item) {\n    return React.createElement(Picker.Item, {\n      label: item.label,\n      value: item.value,\n      key: item.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    });\n  }))), React.createElement(View, {\n    style: styles.ProfileCompleteWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    useForeground: true,\n    onPress: update,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.ProfileCompleteButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ProfileCompleteButtonTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, \"Update\"))))));\n}\nvar styles = StyleSheet.create({\n  ProfileCompleteWrapper: {\n    marginTop: 10\n  },\n  ProfileCompleteButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    width: 178,\n    borderRadius: 20,\n    height: 58,\n    borderColor: \"#fff\",\n    borderStyle: \"solid\",\n    borderWidth: 1\n  },\n  ProfileCompleteButtonTitle: {\n    color: \"#ffffff\",\n    fontSize: 18,\n    fontFamily: \"Poppins-Medium\"\n  },\n  picker: {\n    backgroundColor: \"#1A1A1A\",\n    borderColor: \"#424242\",\n    color: \"#ffffff\",\n    borderWidth: 1,\n    borderRadius: 20,\n    paddingLeft: 20,\n    paddingRight: 20,\n    width: \"80%\",\n    height: 61,\n    alignSelf: \"center\",\n    fontSize: 18,\n    fontFamily: \"Poppins-Regular\",\n    marginBottom: 24\n  },\n  welcomeBackWrapper: {\n    marginBottom: 30,\n    marginTop: 20\n  },\n  welcomeBack: {\n    fontSize: 28,\n    fontFamily: \"Poppins-Medium\",\n    color: \"#EDEDED\",\n    alignSelf: \"center\",\n    width: \"80%\"\n  },\n  textinput: {\n    backgroundColor: \"#1A1A1A\",\n    borderColor: \"#424242\",\n    borderWidth: 1,\n    borderRadius: 20,\n    paddingLeft: 20,\n    paddingRight: 20,\n    width: \"80%\",\n    height: 61,\n    alignSelf: \"center\",\n    fontSize: 18,\n    fontFamily: \"Poppins-Regular\",\n    marginBottom: 24\n  }\n});","map":{"version":3,"sources":["/run/media/silenttush/Data/WorkSpace/Web Projects/Ad-rebate/Screens/ProfileUpdate.js"],"names":["React","useState","useEffect","useContext","Picker","globalstyles","db","AuthContext","ProfileScreen","navigation","location","setLocation","fullName","setFullName","user","value","label","key","locationOptions","setLocationOptions","backAction","goBack","backHandler","BackHandler","addEventListener","remove","update","undefined","collection","doc","uid","set","username","merge","then","pop","ToastAndroid","show","SHORT","catch","err","console","log","container","styles","welcomeBackWrapper","welcomeBack","textinput","text","picker","width","height","color","itemValue","itemIndex","map","item","ProfileCompleteWrapper","ProfileCompleteButton","ProfileCompleteButtonTitle","StyleSheet","create","marginTop","justifyContent","alignItems","alignSelf","borderRadius","borderColor","borderStyle","borderWidth","fontSize","fontFamily","backgroundColor","paddingLeft","paddingRight","marginBottom"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n  BackHandler,\r\n  ScrollView,\r\n  Image,\r\n  TextInput,\r\n  TouchableNativeFeedback,\r\n  ToastAndroid,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { globalstyles } from \"../styles/global\";\r\nimport { db } from \"../firebases\";\r\nimport { AuthContext } from \"../routes/AuthProvider\";\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n  const [location, setLocation] = useState(\"bhilai\");\r\n  const [fullName, setFullName] = useState();\r\n  const { user } = useContext(AuthContext);\r\n  const [locationOptions, setLocationOptions] = useState([\r\n    { value: \"bhilai\", label: \"Bhilai\", key: \"Bhilai\" },\r\n    { value: \"raipur\", label: \"Raipur\", key: \"Raipur\" },\r\n  ]);\r\n  useEffect(() => {\r\n    const backAction = () => {\r\n      navigation.goBack();\r\n      return true;\r\n    };\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n    return () => {\r\n      backHandler.remove();\r\n    };\r\n  }, []);\r\n\r\n  const update = () => {\r\n    if (fullName != undefined) {\r\n      db.collection(\"Users\")\r\n        .doc(user.uid)\r\n        .set(\r\n          {\r\n            username: fullName,\r\n            location: location,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(\r\n          () => navigation.pop(),\r\n          ToastAndroid.show(\"Profile Updated\", ToastAndroid.SHORT)\r\n        )\r\n        .catch(function (err) {\r\n          console.log(\"Error getting Updated:\", err);\r\n        });\r\n    } else {\r\n      db.collection(\"Users\")\r\n        .doc(user.uid)\r\n        .set(\r\n          {\r\n            location: location,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(\r\n          () => navigation.pop(),\r\n          ToastAndroid.show(\"Profile Updated\", ToastAndroid.SHORT)\r\n        )\r\n        .catch(function (err) {\r\n          console.log(\"Error getting Updated:\", err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={globalstyles.container}>\r\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n      <View style={styles.welcomeBackWrapper}>\r\n        <Text style={styles.welcomeBack}>Update profile</Text>\r\n      </View>\r\n      <ScrollView>\r\n        <View>\r\n          <TextInput\r\n            style={styles.textinput}\r\n            placeholder=\"Full Name\"\r\n            placeholderTextColor=\"#EDEDED\"\r\n            color=\"#fff\"\r\n            onChangeText={(text) => setFullName(text)}\r\n          ></TextInput>\r\n        </View>\r\n        <View style={styles.picker}>\r\n          <Picker\r\n            style={{ width: \"100%\", height: 61, color: \"#fff\" }}\r\n            selectedValue={location}\r\n            onValueChange={(itemValue, itemIndex) => setLocation(itemValue)}\r\n          >\r\n            {locationOptions.map((item) => {\r\n              return (\r\n                <Picker.Item\r\n                  label={item.label}\r\n                  value={item.value}\r\n                  key={item.key}\r\n                />\r\n              );\r\n            })}\r\n          </Picker>\r\n        </View>\r\n        <View style={styles.ProfileCompleteWrapper}>\r\n          <TouchableNativeFeedback useForeground={true} onPress={update}>\r\n            <View style={styles.ProfileCompleteButton}>\r\n              <Text style={styles.ProfileCompleteButtonTitle}>Update</Text>\r\n            </View>\r\n          </TouchableNativeFeedback>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  ProfileCompleteWrapper: {\r\n    marginTop: 10,\r\n  },\r\n  ProfileCompleteButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    width: 178,\r\n    borderRadius: 20,\r\n    height: 58,\r\n    borderColor: \"#fff\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n  },\r\n  ProfileCompleteButtonTitle: {\r\n    color: \"#ffffff\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  picker: {\r\n    backgroundColor: \"#1A1A1A\",\r\n    borderColor: \"#424242\",\r\n    color: \"#ffffff\",\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    width: \"80%\",\r\n    height: 61,\r\n    alignSelf: \"center\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Regular\",\r\n    marginBottom: 24,\r\n  },\r\n  welcomeBackWrapper: {\r\n    marginBottom: 30,\r\n    marginTop: 20,\r\n  },\r\n  welcomeBack: {\r\n    fontSize: 28,\r\n    fontFamily: \"Poppins-Medium\",\r\n    color: \"#EDEDED\",\r\n    alignSelf: \"center\",\r\n    width: \"80%\",\r\n  },\r\n  textinput: {\r\n    backgroundColor: \"#1A1A1A\",\r\n    borderColor: \"#424242\",\r\n    borderWidth: 1,\r\n    borderRadius: 20,\r\n    paddingLeft: 20,\r\n    paddingRight: 20,\r\n    width: \"80%\",\r\n    height: 61,\r\n    alignSelf: \"center\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Regular\",\r\n    marginBottom: 24,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}