{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/run/media/silenttush/Data/WorkSpace/Web Projects/Ad-rebate/Screens/AdsVideo.js\";\nimport \"react-native-gesture-handler\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { Video } from \"expo-av\";\nimport { db } from \"../firebases\";\nimport { color } from \"react-native-reanimated\";\nimport { ProgressBar, Colors } from \"react-native-paper\";\nimport { AuthContext } from \"../routes/AuthProvider\";\nimport { isLoaded } from \"expo-font\";\nexport default function AdsVideoScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(route.params.paramKey),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedClient = _useState2[0],\n      setselectedClient = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      adCategoryData = _useState6[0],\n      setadCategoryData = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentAdIndex = _useState8[0],\n      setCurrentAdIndex = _useState8[1];\n\n  var _useState9 = useState(0.0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      progressBarStatus = _useState10[0],\n      setProgressBarStatus = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      qAnswered = _useState12[0],\n      setqAnswered = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      qNa = _useState14[0],\n      setqNa = _useState14[1];\n\n  var randomNumber = Math.floor(Math.random() * 2 + 0);\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showQnA = _useState16[0],\n      setshowQnA = _useState16[1];\n\n  var videoData = [];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      play = _useState18[0],\n      setPlay = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loop = _useState20[0],\n      setloop = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      currentAd = _useState22[0],\n      setCurrentAd = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      adDataToPlay = _useState24[0],\n      setadDataToPlay = _useState24[1];\n\n  var _useContext = useContext(AuthContext),\n      user = _useContext.user,\n      setUserData = _useContext.setUserData,\n      setBannerData = _useContext.setBannerData,\n      userData = _useContext.userData;\n\n  var videoRef = useRef();\n  useEffect(function () {\n    var backAction = function backAction() {\n      var videoData = [];\n      navigation.goBack();\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      backHandler.remove();\n    };\n  }, []);\n\n  function checkAns(ans) {\n    var current, d;\n    return _regeneratorRuntime.async(function checkAns$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (ans === Number(qNa.correctAnswer)) {\n              current = new Date();\n              d = current.getDate() + \"-\" + (current.getMonth() + 1) + \"-\" + current.getFullYear();\n              console.log(d);\n              db.collection(\"ClientData\").doc(qNa.client).collection(\"Ads\").doc(qNa.id).collection(\"Reviews\").doc(user.uid).set({\n                client: qNa.client,\n                date: d,\n                userId: user.uid,\n                username: userData.username,\n                question: qNa.question\n              }).then(function () {\n                console.log(\"saved to db\");\n                setqAnswered(true);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n            } else {\n              if (currentAdIndex === 2) {\n                ToastAndroid.showWithGravity(\"Wrong answer! Please watch Ad again\", ToastAndroid.SHORT, ToastAndroid.BOTTOM);\n                setshowQnA(false);\n                videoRef.current.replayAsync();\n              }\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    initiateAd();\n\n    function initiateAd() {\n      return _regeneratorRuntime.async(function initiateAd$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              db.collectionGroup(\"Ads\").where(\"city\", \"==\", \"bhilai\").where(\"category\", \"==\", \"cafe\").get().then(function (snap) {\n                var x = [];\n                snap.forEach(function (doc) {\n                  x.push(doc.data());\n                });\n                setadCategoryData(x);\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []);\n  useEffect(function () {\n    if (adCategoryData === null) {\n      return;\n    }\n\n    var clientAdList = adCategoryData.filter(function (client) {\n      return client.client === selectedClient;\n    });\n    fetchPlayableLink(clientAdList[randomNumber].link);\n  }, [adCategoryData]);\n  useEffect(function () {\n    if (qAnswered) {\n      setshowQnA(false);\n      navigation.navigate(\"GetCoupon\", {\n        paramKey: selectedClient\n      });\n    } else {}\n  }, [qAnswered]);\n\n  function fetchPlayableLink(link) {\n    return _regeneratorRuntime.async(function fetchPlayableLink$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoading(true);\n            fetch(\"https://adrebate.herokuapp.com/api/getAd?adLink=\" + link, {\n              method: \"GET\"\n            }).then(function (response) {\n              return response.json();\n            }).then(function (responseJson) {\n              setCurrentAd(responseJson.link);\n              setLoading(false);\n            }).catch(function (error) {\n              console.error(error);\n              setLoading(false);\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    console.log(currentAd);\n  }, [currentAd]);\n\n  function _onPlaybackStatusUpdate(playbackStatus) {\n    var adsExSelCli, randomAd, _adsExSelCli, _randomAd;\n\n    return _regeneratorRuntime.async(function onPlaybackStatusUpdate$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (playbackStatus.isPlaying) {\n              setProgressBarStatus(playbackStatus.positionMillis / 30000);\n            } else {}\n\n            if (!playbackStatus.didJustFinish) {\n              _context4.next = 26;\n              break;\n            }\n\n            if (!(currentAdIndex === 2)) {\n              _context4.next = 7;\n              break;\n            }\n\n            setPlay(false);\n            setshowQnA(true);\n            _context4.next = 26;\n            break;\n\n          case 7:\n            if (!(currentAdIndex === 1)) {\n              _context4.next = 18;\n              break;\n            }\n\n            setLoading(true);\n            adsExSelCli = adCategoryData.filter(function (client) {\n              return client.client !== selectedClient;\n            });\n            randomAd = adsExSelCli[Math.floor(Math.random() * adsExSelCli.length)];\n            setqNa({\n              id: randomAd.id,\n              client: randomAd.client,\n              question: randomAd.question,\n              correctAnswer: randomAd.correctAnswer,\n              option1: randomAd.option1,\n              option2: randomAd.option2\n            });\n            _context4.next = 14;\n            return _regeneratorRuntime.awrap(fetchPlayableLink(randomAd.link));\n\n          case 14:\n            setLoading(false);\n            setCurrentAdIndex(currentAdIndex + 1);\n            _context4.next = 26;\n            break;\n\n          case 18:\n            if (!(currentAdIndex === 0)) {\n              _context4.next = 26;\n              break;\n            }\n\n            setLoading(true);\n            _adsExSelCli = adCategoryData.filter(function (client) {\n              return client.client !== selectedClient;\n            });\n            _randomAd = _adsExSelCli[Math.floor(Math.random() * _adsExSelCli.length)];\n            _context4.next = 24;\n            return _regeneratorRuntime.awrap(fetchPlayableLink(_randomAd.link));\n\n          case 24:\n            setLoading(false);\n            setCurrentAdIndex(currentAdIndex + 1);\n\n          case 26:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  if (loading) return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }), React.createElement(ActivityIndicator, {\n    style: {\n      alignSelf: \"center\",\n      marginTop: \"70%\"\n    },\n    size: \"large\",\n    color: \"#8d8d8d\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }));\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }), qNa && showQnA ? React.createElement(View, {\n    elevation: 5,\n    style: styles.questionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, qNa.question), React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      return checkAns(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, qNa.option1)), React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      return checkAns(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, qNa.option2))) : null, loading ? React.createElement(View, {\n    style: styles.adContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, React.createElement(ActivityIndicator, {\n    color: \"white\",\n    size: \"large\",\n    style: {\n      marginTop: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  })) : React.createElement(View, {\n    style: styles.adContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.adCurrentIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.adCurrentFont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, currentAdIndex + 1)), React.createElement(ProgressBar, {\n    progress: progressBarStatus,\n    color: Colors.blue200,\n    style: styles.progressBar,\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }), React.createElement(Video, {\n    source: {\n      uri: currentAd\n    },\n    onPlaybackStatusUpdate: function onPlaybackStatusUpdate(playbackStatus) {\n      return _onPlaybackStatusUpdate(playbackStatus);\n    },\n    rate: 1.0,\n    ref: videoRef,\n    volume: 1.0,\n    isLooping: loop,\n    isMuted: false,\n    resizeMode: \"cover\",\n    shouldPlay: play,\n    style: styles.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  correctAnswer: {\n    backgroundColor: \"#5eca6c\"\n  },\n  option: {\n    width: \"90%\",\n    borderRadius: 10,\n    height: \"22%\",\n    fontSize: 15,\n    fontFamily: \"Poppins-Medium\",\n    backgroundColor: \"transparent\",\n    color: \"rgba(255, 255, 255, 0.651)\",\n    backgroundColor: \"rgba(82, 82, 82, 0.247)\",\n    paddingTop: \"4.5%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 15\n  },\n  question: {\n    width: \"100%\",\n    display: \"flex\",\n    borderRadius: 20,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    height: \"30%\",\n    fontSize: 18,\n    fontFamily: \"Poppins-SemiBold\",\n    color: \"rgba(255, 255, 255, 0.842)\",\n    paddingTop: \"8%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  questionContainer: {\n    marginTop: \"50%\",\n    zIndex: 5,\n    width: \"80%\",\n    height: \"30%\",\n    top: 0,\n    backgroundColor: \"#000000\",\n    borderRadius: 15,\n    borderColor: \"rgba(255, 255, 255, 0.842)\",\n    borderWidth: 1,\n    position: \"absolute\",\n    alignSelf: \"center\",\n    alignItems: \"center\"\n  },\n  adContainer: {\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    borderWidth: 2,\n    borderStyle: \"solid\"\n  },\n  progressBar: {\n    height: 5,\n    width: Dimensions.get(\"window\").width,\n    backgroundColor: \"black\"\n  },\n  video: {\n    zIndex: -1,\n    width: Dimensions.get(\"window\").width,\n    height: Dimensions.get(\"window\").height,\n    position: \"absolute\",\n    alignSelf: \"center\"\n  },\n  adCurrentIndex: {\n    zIndex: 1,\n    position: \"absolute\",\n    top: 10,\n    alignSelf: \"center\",\n    right: 10,\n    backgroundColor: \"rgba(209, 209, 209, 0.301)\",\n    width: 40,\n    height: 40,\n    flexDirection: \"row\",\n    borderRadius: 50,\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Poppins-Medium\"\n  },\n  adCurrentFont: {\n    fontSize: 18,\n    fontFamily: \"Poppins-Medium\"\n  },\n  container: {\n    flex: 1,\n    position: \"relative\",\n    height: Dimensions.get(\"window\").height,\n    backgroundColor: \"black\"\n  }\n});","map":{"version":3,"sources":["/run/media/silenttush/Data/WorkSpace/Web Projects/Ad-rebate/Screens/AdsVideo.js"],"names":["React","useState","useEffect","useRef","useContext","Video","db","color","ProgressBar","Colors","AuthContext","isLoaded","AdsVideoScreen","navigation","route","params","paramKey","selectedClient","setselectedClient","loading","setLoading","adCategoryData","setadCategoryData","currentAdIndex","setCurrentAdIndex","progressBarStatus","setProgressBarStatus","qAnswered","setqAnswered","qNa","setqNa","randomNumber","Math","floor","random","showQnA","setshowQnA","videoData","play","setPlay","loop","setloop","currentAd","setCurrentAd","adDataToPlay","setadDataToPlay","user","setUserData","setBannerData","userData","videoRef","backAction","goBack","backHandler","BackHandler","addEventListener","remove","checkAns","ans","Number","correctAnswer","current","Date","d","getDate","getMonth","getFullYear","console","log","collection","doc","client","id","uid","set","date","userId","username","question","then","catch","err","ToastAndroid","showWithGravity","SHORT","BOTTOM","replayAsync","initiateAd","collectionGroup","where","get","snap","x","forEach","push","data","clientAdList","filter","fetchPlayableLink","link","navigate","fetch","method","response","json","responseJson","error","onPlaybackStatusUpdate","playbackStatus","isPlaying","positionMillis","didJustFinish","adsExSelCli","randomAd","length","option1","option2","styles","container","alignSelf","marginTop","questionContainer","option","adContainer","adCurrentIndex","adCurrentFont","blue200","progressBar","uri","video","StyleSheet","create","backgroundColor","width","borderRadius","height","fontSize","fontFamily","paddingTop","alignItems","textAlign","flexDirection","justifyContent","display","borderBottomLeftRadius","borderBottomRightRadius","zIndex","top","borderColor","borderWidth","position","Dimensions","borderStyle","right","flex"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n  Dimensions,\r\n  ToastAndroid,\r\n  TouchableNativeFeedback,\r\n  BackHandler,\r\n} from \"react-native\";\r\nimport { Video } from \"expo-av\";\r\nimport { db } from \"../firebases\";\r\nimport { color } from \"react-native-reanimated\";\r\nimport { ProgressBar, Colors } from \"react-native-paper\";\r\nimport { AuthContext } from \"../routes/AuthProvider\";\r\nimport { isLoaded } from \"expo-font\";\r\n\r\nexport default function AdsVideoScreen({ navigation, route }) {\r\n  const [selectedClient, setselectedClient] = useState(route.params.paramKey);\r\n  const [loading, setLoading] = useState(false);\r\n  const [adCategoryData, setadCategoryData] = useState(null);\r\n  const [currentAdIndex, setCurrentAdIndex] = useState(0);\r\n  const [progressBarStatus, setProgressBarStatus] = useState(0.0);\r\n  const [qAnswered, setqAnswered] = useState(false);\r\n  const [qNa, setqNa] = useState(null);\r\n  const randomNumber = Math.floor(Math.random() * 2 + 0);\r\n  const [showQnA, setshowQnA] = useState(false);\r\n  const videoData = [];\r\n  const [play, setPlay] = useState(true);\r\n  const [loop, setloop] = useState(false);\r\n  const [currentAd, setCurrentAd] = useState(null);\r\n  const [adDataToPlay, setadDataToPlay] = useState([]);\r\n  const { user, setUserData, setBannerData, userData } = useContext(\r\n    AuthContext\r\n  );\r\n  const videoRef = useRef();\r\n  useEffect(() => {\r\n    const backAction = () => {\r\n      let videoData = [];\r\n      navigation.goBack();\r\n      return true;\r\n    };\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n    return () => {\r\n      backHandler.remove();\r\n    };\r\n  }, []);\r\n\r\n  async function checkAns(ans) {\r\n    if (ans === Number(qNa.correctAnswer)) {\r\n      const current = new Date();\r\n      const d =\r\n        current.getDate() +\r\n        \"-\" +\r\n        (current.getMonth() + 1) +\r\n        \"-\" +\r\n        current.getFullYear();\r\n      console.log(d);\r\n      db.collection(\"ClientData\")\r\n        .doc(qNa.client)\r\n        .collection(\"Ads\")\r\n        .doc(qNa.id)\r\n        .collection(\"Reviews\")\r\n        .doc(user.uid)\r\n        .set({\r\n          client: qNa.client,\r\n          date: d,\r\n          userId: user.uid,\r\n          username: userData.username,\r\n          question: qNa.question,\r\n        })\r\n        .then(() => {\r\n          console.log(\"saved to db\");\r\n          setqAnswered(true);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      if (currentAdIndex === 2) {\r\n        ToastAndroid.showWithGravity(\r\n          \"Wrong answer! Please watch Ad again\",\r\n          ToastAndroid.SHORT,\r\n          ToastAndroid.BOTTOM\r\n        );\r\n        setshowQnA(false);\r\n        videoRef.current.replayAsync();\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    initiateAd();\r\n    async function initiateAd() {\r\n      db.collectionGroup(\"Ads\")\r\n        .where(\"city\", \"==\", \"bhilai\")\r\n        .where(\"category\", \"==\", \"cafe\")\r\n        .get()\r\n        .then((snap) => {\r\n          let x = [];\r\n          snap.forEach((doc) => {\r\n            x.push(doc.data());\r\n          });\r\n          setadCategoryData(x);\r\n        });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (adCategoryData === null) {\r\n      return;\r\n    }\r\n    let clientAdList = adCategoryData.filter(\r\n      (client) => client.client === selectedClient\r\n    );\r\n    fetchPlayableLink(clientAdList[randomNumber].link);\r\n  }, [adCategoryData]);\r\n  useEffect(() => {\r\n    if (qAnswered) {\r\n      setshowQnA(false);\r\n      navigation.navigate(\"GetCoupon\", {\r\n        paramKey: selectedClient,\r\n      });\r\n    } else {\r\n    }\r\n  }, [qAnswered]);\r\n\r\n  async function fetchPlayableLink(link) {\r\n    setLoading(true);\r\n    fetch(`https://adrebate.herokuapp.com/api/getAd?adLink=${link}`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setCurrentAd(responseJson.link);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(currentAd);\r\n  }, [currentAd]);\r\n  async function onPlaybackStatusUpdate(playbackStatus) {\r\n    if (playbackStatus.isPlaying) {\r\n      // Update your UI for the playing state\r\n      //console.log((playbackStatus.positionMillis / 30000).toFixed(2));\r\n      setProgressBarStatus(playbackStatus.positionMillis / 30000);\r\n    } else {\r\n      // Update your UI for the paused state\r\n    }\r\n    if (playbackStatus.didJustFinish) {\r\n      if (currentAdIndex === 2) {\r\n        setPlay(false);\r\n        setshowQnA(true);\r\n      } else if (currentAdIndex === 1) {\r\n        setLoading(true);\r\n        let adsExSelCli = adCategoryData.filter(\r\n          (client) => client.client !== selectedClient\r\n        );\r\n        const randomAd =\r\n          adsExSelCli[Math.floor(Math.random() * adsExSelCli.length)];\r\n        setqNa({\r\n          id: randomAd.id,\r\n          client: randomAd.client,\r\n          question: randomAd.question,\r\n          correctAnswer: randomAd.correctAnswer,\r\n          option1: randomAd.option1,\r\n          option2: randomAd.option2,\r\n        });\r\n        await fetchPlayableLink(randomAd.link);\r\n        setLoading(false);\r\n        setCurrentAdIndex(currentAdIndex + 1);\r\n      } else if (currentAdIndex === 0) {\r\n        setLoading(true);\r\n        let adsExSelCli = adCategoryData.filter(\r\n          (client) => client.client !== selectedClient\r\n        );\r\n        const randomAd =\r\n          adsExSelCli[Math.floor(Math.random() * adsExSelCli.length)];\r\n        await fetchPlayableLink(randomAd.link);\r\n        setLoading(false);\r\n        setCurrentAdIndex(currentAdIndex + 1);\r\n      }\r\n    }\r\n  }\r\n  //console.log(adsSelecteData.filter((client) => client.client != value).length);\r\n  //console.log(videoPlayBack);\r\n  if (loading)\r\n    return (\r\n      <View style={styles.container}>\r\n        <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n        <ActivityIndicator\r\n          style={{ alignSelf: \"center\", marginTop: \"70%\" }}\r\n          size=\"large\"\r\n          color=\"#8d8d8d\"\r\n        ></ActivityIndicator>\r\n      </View>\r\n    );\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"black\" barStyle=\"light-content\" />\r\n      {qNa && showQnA ? (\r\n        <View elevation={5} style={styles.questionContainer}>\r\n          <Text style={styles.question}>{qNa.question}</Text>\r\n          <TouchableNativeFeedback onPress={() => checkAns(1)}>\r\n            <Text style={styles.option}>{qNa.option1}</Text>\r\n          </TouchableNativeFeedback>\r\n\r\n          <TouchableNativeFeedback onPress={() => checkAns(2)}>\r\n            <Text style={styles.option}>{qNa.option2}</Text>\r\n          </TouchableNativeFeedback>\r\n        </View>\r\n      ) : null}\r\n      {loading ? (\r\n        <View style={styles.adContainer}>\r\n          <ActivityIndicator\r\n            color=\"white\"\r\n            size=\"large\"\r\n            style={{ marginTop: \"70%\" }}\r\n          ></ActivityIndicator>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.adContainer}>\r\n          <View style={styles.adCurrentIndex}>\r\n            <Text style={styles.adCurrentFont}>{currentAdIndex + 1}</Text>\r\n          </View>\r\n\r\n          <ProgressBar\r\n            progress={progressBarStatus}\r\n            color={Colors.blue200}\r\n            style={styles.progressBar}\r\n            visible={true}\r\n          />\r\n          <Video\r\n            source={{\r\n              uri: currentAd,\r\n            }}\r\n            onPlaybackStatusUpdate={(playbackStatus) =>\r\n              onPlaybackStatusUpdate(playbackStatus)\r\n            }\r\n            rate={1.0}\r\n            ref={videoRef}\r\n            volume={1.0}\r\n            isLooping={loop}\r\n            isMuted={false}\r\n            resizeMode=\"cover\"\r\n            shouldPlay={play}\r\n            style={styles.video}\r\n          />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  correctAnswer: {\r\n    backgroundColor: \"#5eca6c\",\r\n  },\r\n  option: {\r\n    width: \"90%\",\r\n    borderRadius: 10,\r\n    height: \"22%\",\r\n    fontSize: 15,\r\n    fontFamily: \"Poppins-Medium\",\r\n    backgroundColor: \"transparent\",\r\n    color: \"rgba(255, 255, 255, 0.651)\",\r\n    backgroundColor: \"rgba(82, 82, 82, 0.247)\",\r\n    paddingTop: \"4.5%\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 15,\r\n  },\r\n  question: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    borderRadius: 20,\r\n    borderBottomLeftRadius: 0,\r\n    borderBottomRightRadius: 0,\r\n    height: \"30%\",\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-SemiBold\",\r\n    color: \"rgba(255, 255, 255, 0.842)\",\r\n    paddingTop: \"8%\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  questionContainer: {\r\n    marginTop: \"50%\",\r\n    zIndex: 5,\r\n    width: \"80%\",\r\n    height: \"30%\",\r\n    top: 0,\r\n    backgroundColor: \"#000000\",\r\n    borderRadius: 15,\r\n    borderColor: \"rgba(255, 255, 255, 0.842)\",\r\n    borderWidth: 1,\r\n    position: \"absolute\",\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  adContainer: {\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n    borderWidth: 2,\r\n    borderStyle: \"solid\",\r\n  },\r\n  progressBar: {\r\n    height: 5,\r\n    width: Dimensions.get(\"window\").width,\r\n    backgroundColor: \"black\",\r\n  },\r\n  video: {\r\n    zIndex: -1,\r\n    width: Dimensions.get(\"window\").width,\r\n    height: Dimensions.get(\"window\").height,\r\n    position: \"absolute\",\r\n    alignSelf: \"center\",\r\n  },\r\n  adCurrentIndex: {\r\n    zIndex: 1,\r\n    position: \"absolute\",\r\n    top: 10,\r\n    alignSelf: \"center\",\r\n    right: 10,\r\n    backgroundColor: \"rgba(209, 209, 209, 0.301)\",\r\n    width: 40,\r\n    height: 40,\r\n    flexDirection: \"row\",\r\n    borderRadius: 50,\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  adCurrentFont: {\r\n    fontSize: 18,\r\n    fontFamily: \"Poppins-Medium\",\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    position: \"relative\",\r\n    height: Dimensions.get(\"window\").height,\r\n    backgroundColor: \"black\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}