{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WorkSpace\\\\Web Projects\\\\Ad-rebate\\\\MainRoutes.js\";\nimport \"react-native-gesture-handler\";\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport Navigation from \"./routes/Navigation\";\nimport * as Font from \"expo-font\";\nimport { AuthContext } from \"./routes/AuthProvider\";\nimport * as firebase from \"firebase\";\nimport NavigationLogged from \"./routes/NavigationLogged\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { cos } from \"react-native-reanimated\";\nexport default function MainRoute() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      fontLoaded = _React$useState2[0],\n      setFontLoaded = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      user = _React$useContext.user,\n      setUser = _React$useContext.setUser;\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      initializing = _React$useState4[0],\n      setInitializing = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      appIsReady = _React$useState6[0],\n      setAppIsReady = _React$useState6[1];\n\n  React.useEffect(function () {\n    (function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                \"Poppins-Medium\": require(\"./assets/fonts/Poppins-Medium.ttf\"),\n                \"Poppins-SemiBold\": require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n                \"Poppins-Regular\": require(\"./assets/fonts/Poppins-Regular.ttf\"),\n                \"Poppins-Light\": require(\"./assets/fonts/Poppins-Light.ttf\")\n              }));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var onAuthStateChanged = function onAuthStateChanged(user) {\n    return _regeneratorRuntime.async(function onAuthStateChanged$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setUser(user);\n            if (initializing) setInitializing(false);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  React.useEffect(function () {\n    var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n\n  preventFromAutoHiding = function preventFromAutoHiding() {\n    return _regeneratorRuntime.async(function preventFromAutoHiding$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.warn(_context3.t0);\n\n          case 8:\n            prepareResources();\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  prepareResources = function prepareResources() {\n    return _regeneratorRuntime.async(function prepareResources$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(performAPICalls());\n\n          case 3:\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(downloadAssets());\n\n          case 5:\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            console.warn(_context5.t0);\n\n          case 10:\n            _context5.prev = 10;\n            setFontLoaded(true);\n            setAppIsReady(true, function _callee2() {\n              return _regeneratorRuntime.async(function _callee2$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n                    case 2:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n            return _context5.finish(10);\n\n          case 14:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, [[0, 7, 10, 14]], Promise);\n  };\n\n  if (initializing && !fontLoaded && !appIsReady) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Ad-Rebate\"));\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, user ? React.createElement(NavigationLogged, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }) : React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 38\n    }\n  }));\n}\n\nfunction performAPICalls() {\n  return _regeneratorRuntime.async(function performAPICalls$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction downloadAssets() {\n  return _regeneratorRuntime.async(function downloadAssets$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"black\"\n  },\n  text: {\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["D:/WorkSpace/Web Projects/Ad-rebate/MainRoutes.js"],"names":["React","NavigationContainer","Navigation","Font","AuthContext","firebase","NavigationLogged","cos","MainRoute","useState","fontLoaded","setFontLoaded","useContext","user","setUser","initializing","setInitializing","appIsReady","setAppIsReady","useEffect","loadAsync","require","onAuthStateChanged","subscriber","auth","preventFromAutoHiding","SplashScreen","preventAutoHideAsync","console","warn","prepareResources","performAPICalls","downloadAssets","hideAsync","styles","container","text","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","color","fontWeight"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\r\nimport * as React from \"react\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport Navigation from \"./routes/Navigation\";\r\nimport * as Font from \"expo-font\";\r\nimport { AuthContext } from \"./routes/AuthProvider\";\r\nimport * as firebase from \"firebase\";\r\nimport NavigationLogged from \"./routes/NavigationLogged\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { cos } from \"react-native-reanimated\";\r\n\r\nexport default function MainRoute() {\r\n  const [fontLoaded, setFontLoaded] = React.useState(false);\r\n  const { user, setUser } = React.useContext(AuthContext);\r\n  const [initializing, setInitializing] = React.useState(true);\r\n  const [appIsReady, setAppIsReady] = React.useState(false);\r\n\r\n  //Fonts Loading From Assests\r\n  React.useEffect(() => {\r\n    (async () =>\r\n      await Font.loadAsync({\r\n        \"Poppins-Medium\": require(\"./assets/fonts/Poppins-Medium.ttf\"),\r\n        \"Poppins-SemiBold\": require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\r\n        \"Poppins-Regular\": require(\"./assets/fonts/Poppins-Regular.ttf\"),\r\n        \"Poppins-Light\": require(\"./assets/fonts/Poppins-Light.ttf\"),\r\n      }))();\r\n  }, []);\r\n\r\n  const onAuthStateChanged = async (user) => {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber;\r\n  }, []);\r\n\r\n  preventFromAutoHiding = async () => {\r\n    try {\r\n      await SplashScreen.preventAutoHideAsync();\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    prepareResources();\r\n  };\r\n\r\n  prepareResources = async () => {\r\n    try {\r\n      await performAPICalls();\r\n      await downloadAssets();\r\n    } catch (e) {\r\n      console.warn(e);\r\n    } finally {\r\n      setFontLoaded(true);\r\n      setAppIsReady(true, async () => {\r\n        await SplashScreen.hideAsync();\r\n      });\r\n    }\r\n  };\r\n\r\n  if (initializing && !fontLoaded && !appIsReady) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>Ad-Rebate</Text>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <NavigationContainer>\r\n      {user ? <NavigationLogged /> : <Navigation />}\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nasync function performAPICalls() {}\r\nasync function downloadAssets() {}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}